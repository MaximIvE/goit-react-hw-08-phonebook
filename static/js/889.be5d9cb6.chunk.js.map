{"version":3,"file":"static/js/889.be5d9cb6.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.styled.jsx","components/DataInputForm/DataInputForm.styled.jsx","components/DataInputForm/DataInputForm.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styled.jsx","components/ConactCard/ConactCard .styled.jsx","components/ConactCard/ConactCard.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx","styles/placeholders.styled.jsx","styles/colors.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    height: calc(100vh - 100px);\n    \n    color: rgba(255, 255, 255, 0.96);\n    text-shadow: 1px 1px 2px black, 0 0 1em black, 0 0 0.2em black;\n    @media screen and (min-width:480px){\n        display: flex;\n    }\n`;\n\nexport const Message = styled.h2`\npadding-top: 20px;\nmargin-top: 20px;\ntext-align: center;\nfont-style: italic;\nfont-weight: 500;\nfont-size: 20px;\nwidth: 80vw;\ntext-shadow: 0px 0px 0.8em black, 0 0 0.4em black;\n`;","import styled from 'styled-components';\nimport { Button } from '../../styles/placeholders.styled';\n\n\nexport const DataInput = styled.form`\n  \n    display: flex;\n    flex-direction: column;\n    padding: 4px 20px;\n    text-shadow: 1px 1px 2px black, 0 0 1em black, 0 0 0.2em black;\n    @media (min-width:480px){\n        padding: 4px;\n  };\n  \n`;\n\nexport const ButtonForm = styled(Button)`\nmargin-top: 8px;\nwidth: 8em;\nmargin-left: auto;\nmargin-right: auto;\nfont-size: 0.8em;\n`;\n","import { memo, useContext} from 'react';\n\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport langContext from 'langContext';\n\nimport locale from '../../shared/materials/langauges.json';\nimport { DataInput, ButtonForm } from './DataInputForm.styled';\n\n\nconst DataInputForm = ({addContact})=>{\n\n        const idInputName = nanoid();\n        const idInputNumber = nanoid();\n\n        const handleSubmit = e => {\n            e.preventDefault();\n            const name = e.currentTarget.name.value;\n            const number = e.currentTarget.number.value;\n            addContact(name, number);\n            e.currentTarget.reset();\n        };\n\n        const lang = useContext(langContext);\n        const content= locale[lang].phonebook;\n\n        return (\n            \n            <DataInput onSubmit={handleSubmit}>\n                <label htmlFor={idInputName}>{content.name}</label>\n                <input\n                    name=\"name\"\n                    type=\"text\"\n                    id={idInputName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                \n                <label htmlFor={idInputNumber}>{content.number}</label>\n                <input\n                    name=\"number\"\n                    type=\"tel\"\n                    id={idInputNumber}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    />\n                <ButtonForm \n                    type='submit' \n                    name=\"contacts\" \n                    >{content.buttonText}\n                </ButtonForm>\n            </DataInput>\n            \n        );\n};\n\nexport default memo(DataInputForm);\n\nDataInputForm.propTypes={\n    addContact: PropTypes.func.isRequired,\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n@media screen and (min-width:480px){\n    width: 85%;\n    max-width: ${props => {if (props.element === \"form\") return \"20vw\"}};\n    min-width: ${props => {if (props.element === \"form\") return \"160px\"}};\n    padding: 4px 8px ;\n    }\npadding: 2px;\nwidth: 100%;\n\n    &:first-child{\n        box-shadow: inset 0 -2px 1px rgba(193,193,193,0.1), inset -2px -4px 4px rgba(0,0,0,0.2), 0 2px 1px rgba(193,193,193,0.1), 2px 4px 4px rgba(0,0,0,0.2);\n        background-color: rgba(0,0,0,0.1);\n        border-radius: 4px;\n        \n    };\n\n    &:last-child{\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n        background-color: rgba(0,0,0,0.1);\n        border-radius: 4px;\n        padding: 4px 0 0 0;\n    };\n`;\n\nexport const Title = styled.h2`\n    text-align: center;\n    margin:  4px 0;\n`;","import { Title, Wrapper } from './Section.styled';\nimport PropTypes from 'prop-types';\n\n\nexport default function Section({element, children}){\n    return(\n        <Wrapper element={element}>\n            <Title>{children[0]}</Title>\n            {children[1]}\n            {children[2]}\n        </Wrapper>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin: 4px 0 0 0;\npadding:  4px 0 0 0;\noverflow-y: auto;\n`","import styled from 'styled-components';\nimport { Button } from '../../styles/placeholders.styled'\n\nexport const Card = styled.li`\n    display: grid;\n    grid-template-columns: 1.4fr 1fr 0.4fr;\n    padding: 4px 4px 4px 8px;\n    align-items: center;\n    height: 24px;\n    margin: 2px;\n    border-bottom:  rgba(0,0,0,0.1) 1px solid;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: #e9f1f2;\n    text-shadow: 0 0 0.8em black;\n    font-size: 0.8em;\n    @media screen and (min-width:640px){\n        padding: 8px;\n        font-size: 1em;\n    }\n`;\n\nexport const Name = styled.p`\nmargin-right: 8px;\n`;\n\nexport const Phone = styled.p`\nmargin-right: 8px;\n`;\n\nexport const ButtonCard = styled(Button)`\npadding: 4px 6px 4px 4px; \nfont-size: 0.8em;\nmax-width: 5.6em;\n`;","import { memo, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Name, Phone, ButtonCard } from \"./ConactCard .styled\";\nimport langContext from 'langContext';\nimport locale from '../../shared/materials/langauges.json';\n\n\nfunction ConactCard({name, id, number, removeCard}){\n\n    const lang = useContext(langContext);\n    const content = locale[lang].contacts;\n\n    return (<Card name={name} id={id}>\n        <Name>{name}</Name>\n        <Phone>{number}</Phone>\n        <ButtonCard type='button' onClick={removeCard} name={id}>{content.buttonText}</ButtonCard>\n    </Card>)\n};\n\nexport default memo(ConactCard);\n\nConactCard.propTypes={\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    removeCard: PropTypes.func.isRequired,\n};","import {useMemo} from 'react';\nimport { useSelector } from 'react-redux';\nimport {List} from './Contacts.styled';\nimport ConactCard from \"components/ConactCard/ConactCard\";\nimport PropTypes from 'prop-types';\n\n\nexport default function Contacts({removeConactApp}){\n    \n    const {contacts, filter } = useSelector(store => store);\n    \n    const { items } = contacts;\n    const normalizeTodos = filter.toLowerCase();\n    const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizeTodos));\n    \n    const getCardMarking = useMemo(() => {\n        return (visibleContacts.map( (user) =>\n                <ConactCard \n            key={user.name + user.id}\n            id={user.id}\n            name = {user.name}\n            number = {user.phone}\n            removeCard={(e) => removeConactApp(e.currentTarget.name, visibleContacts.length)}/>\n            )\n        );\n    },[removeConactApp, visibleContacts]);\n    \n    return (\n        <List>\n            {getCardMarking}\n        </List>\n    )\n};\n\nContacts.propTypes={\n    removeConactApp: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string).isRequired,\n    )\n}","import styled from \"styled-components\";\n\nexport const FilterSection = styled.div`\n    box-shadow: inset 0 -2px 2px rgba(193,193,193,0.1), inset -2px -4px 8px rgba(0,0,0,0.2), 0 2px 2px rgba(193,193,193,0.1), 2px 4px 8px rgba(0,0,0,0.2);\n    background-color: rgba(0,0,0,0.4);\n    background-color: rgba(0, 0, 0, 0.4);\n    text-shadow: 0 0 0.8em black;\n    color: #e9f1f2;\n    border-radius: 2px;\n    padding: 4px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Input = styled.input`\nwidth: 160px;\n`;","import { useContext } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { nanoid } from 'nanoid';\nimport { FilterSection, Input } from \"./Filter.styled\";\nimport langContext from 'langContext';\n\nimport locale from '../../shared/materials/langauges.json';\nimport { setFilter } from 'redux/filter/filter-slice'; \n\nexport default function Filter(){\n\n    const dispatch = useDispatch()\n    const idInputFilter = nanoid();\n    const {filter} = useSelector(store => store);\n\n    const lang= useContext(langContext);\n    const content=locale[lang].contacts;\n\n    return <FilterSection>\n        <label htmlFor={idInputFilter}>{content.filtrText}</label>\n            <Input \n                id={idInputFilter}\n                type=\"text\"\n                onChange={e => dispatch(setFilter(e.currentTarget.value.trim())) }\n                value={filter}\n                placeholder={content.filtrPlaceholder}>\n            </Input>\n        </FilterSection>\n};","import React, { useEffect, useCallback, useContext } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Container, Message } from \"./Phonebook.styled\";\n\nimport DataInputForm from '../DataInputForm/DataInputForm';\nimport Section from '../Section/Section';\nimport Contacts from '../Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport langContext from 'langContext';\nimport locale from '../../shared/materials/langauges.json';\n\nimport { fetchItems, addItem, removeItem } from 'redux/items/items-operations';\nimport { setFilter } from 'redux/filter/filter-slice'; \n\n\nconst  Phonebook = () => {\n\n  const {contacts} = useSelector(store => store);\n  const  {items, loading} = contacts;\n\n  //Відмальовування активної мови відбувається в Langauge, а цей стейт потрібен для контексту\n  const lang = useContext(langContext);\n  const content = locale[lang];\n\n  const dispatch = useDispatch();\n  \n  //Завантаження контактів з бекенду\n  useEffect(()=>{\n    dispatch(fetchItems());\n  },[dispatch]);\n\n  const addContact = useCallback((name, phone)=>{\n    if (items.find(item => item.name === name)) return alert(name + \" \" + content.notific);\n   dispatch( addItem({name, phone}) );\n  },[items, content.notific, dispatch]);\n \n  const removeConactApp = useCallback( async(id, length) => {\n    await dispatch(removeItem(id));\n    if (length === 1) dispatch(setFilter(\"\"));\n  },[dispatch]);\n\n    return (\n      <Container >\n          <Section element=\"form\">{content.phonebook.header}\n            {<DataInputForm \n              addContact={addContact}\n            />}\n          </Section>\n\n          {items.length > 0 \n          && <Section element=\"contacts\">{content.contacts.header}\n              <Filter />\n              <Contacts \n                removeConactApp={removeConactApp}\n              />\n            </Section>}\n\n          {(items.length === 0 && !loading) && <Message>{content.message}</Message>}\n      </Container>\n    );\n};\n\nexport default Phonebook;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    \n`;","import Phonebook from \"components/Phonebook/Phonebook\";\nimport { Wrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\n    return (\n        <Wrapper>\n            {<Phonebook />}\n        </Wrapper>\n    )\n}\n\nexport default ContactsPage;","import styled from \"styled-components\";\nimport { color } from \"./colors\";\n\nconst {hoverBtn, activeBtn} = color.backgroundBtn;\nconst {shInset1, shInset2, shHover1, shHover2, shActive1, shActive2} = color.shadowBtn;\nexport const Button = styled.button`\n    border:none;\n    // font:inherit;\n    cursor: pointer;\n    outline: none;\n    border-radius: 4px;\n    box-shadow: inset -2px -2px 2px ${shInset1}, inset 2px 2px 2px ${shInset2}, 0 2px 1px ${shHover1}, 2px 4px 4px ${shHover2};\n    padding: 4px 6px 4px 4px;    \n\n    &:hover{\n        background-color: ${hoverBtn};\n    };\n\n    &:active{\n        background-color: ${activeBtn};\n        box-shadow: inset -2px -2px 2px ${shInset1}, inset 2px 2px 2px ${shInset2}, 0 2px 0px ${shActive1}, 2px 2px 2px ${shActive2};\n    }\n`\n","export const color = {\n    backgroundBody:  \"rgba(162, 196, 197,1)\",\n\n    backgroundBtn: {\n        hoverBtn: '#e0e5ebf3',\n        activeBtn: '#e0e5ebdd',\n    },\n\n    shadowBtn: {\n        shInset1: 'rgba(0,0,0,0.3)',\n        shInset2: 'rgba(255,255,255,0.5)',\n\n        shHover1: 'rgba(193,193,193,0.1)',\n        shHover2: 'rgba(0,0,0,0.2)',\n        shActive1: 'rgba(193,193,193,0.15)',\n        shActive2: 'rgba(0,0,0,0.3)',\n    }\n};\n\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["Container","styled","Message","DataInput","ButtonForm","Button","DataInputForm","addContact","idInputName","nanoid","idInputNumber","lang","useContext","langContext","content","locale","phonebook","onSubmit","e","preventDefault","name","currentTarget","value","number","reset","htmlFor","type","id","pattern","title","required","buttonText","memo","Wrapper","props","element","Title","Section","children","List","Card","Name","Phone","ButtonCard","ConactCard","removeCard","contacts","onClick","Contacts","removeConactApp","useSelector","store","filter","items","normalizeTodos","toLowerCase","visibleContacts","contact","includes","getCardMarking","useMemo","map","user","phone","length","FilterSection","Input","Filter","dispatch","useDispatch","idInputFilter","filtrText","onChange","setFilter","trim","placeholder","filtrPlaceholder","loading","useEffect","fetchItems","useCallback","find","item","alert","notific","addItem","removeItem","header","message","hoverBtn","activeBtn","shInset1","shInset2","shHover1","shHover2","shActive1","shActive2","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}