{"version":3,"file":"static/js/730.a92b81d8.chunk.js","mappings":"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","sources":["components/Phonebook/Phonebook.styled.jsx","langContext.js","styles/placeholders.styled.jsx","styles/colors.jsx","components/DataInputForm/DataInputForm.styled.jsx","components/DataInputForm/DataInputForm.jsx","components/Section/Section.styled.jsx","components/Section/Section.jsx","components/Contacts/Contacts.styled.jsx","components/ConactCard/ConactCard .styled.jsx","components/ConactCard/ConactCard.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Settings/Settings.styled.jsx","components/Langauge/Langauge.styled.jsx","components/Langauge/Langauge.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Background/Background.styled.jsx","components/Background/Background.jsx","shared/api/imageApi.js","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Settings/Settings.jsx","components/Phonebook/Phonebook.jsx","pages/ContactsPage/ContactsPage.styled.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const Background = styled.div`\n    background-color: rgba(255, 255, 255, 0.9); \n    background-image:  url(${props=> props.bg});\n    background-repeat: no-repeat;\n    background-size: cover;\n    position: sticky;\n    height: 100vh;\n`;\n\n\nexport const Container = styled.div`\n    max-width: 1200px;\n    margin-left: auto;\n    margin-right: auto;\n    display: block;\n    \n    background-attachment: fixed;\n    background-position: 50% 50%;\n    height: 100vh;\n    \n    color: #fff;\n    text-shadow: 1px 1px 2px black, 0 0 1em black, 0 0 0.2em black;\n    @media screen and (min-width:480px){\n        display: flex;\n    }\n`;\n\nexport const Message = styled.h2`\npadding-top: 20px;\n\nmargin-top: 20px;\ntext-align: center;\nfont-style: italic;\nfont-weight: 500;\nfont-size: 20px;\nwidth: 80vw;\ntext-shadow: 0px 0px 0.8em black, 0 0 0.4em black;\n`;","import { createContext } from \"react\";\n\nconst langContext = createContext(\"Ua\");\n\nexport default langContext;","import styled from \"styled-components\";\nimport { color } from \"./colors\";\n\nconst {hoverBtn, activeBtn} = color.backgroundBtn;\nconst {shInset1, shInset2, shHover1, shHover2, shActive1, shActive2} = color.shadowBtn;\nexport const Button = styled.button`\n    border:none;\n    // font:inherit;\n    cursor: pointer;\n    outline: none;\n    border-radius: 4px;\n    box-shadow: inset -2px -2px 2px ${shInset1}, inset 2px 2px 2px ${shInset2}, 0 2px 1px ${shHover1}, 2px 4px 4px ${shHover2};\n    padding: 4px 6px 4px 4px;    \n\n    &:hover{\n        background-color: ${hoverBtn};\n    };\n\n    &:active{\n        background-color: ${activeBtn};\n        box-shadow: inset -2px -2px 2px ${shInset1}, inset 2px 2px 2px ${shInset2}, 0 2px 0px ${shActive1}, 2px 2px 2px ${shActive2};\n    }\n`\n","export const color = {\n    backgroundBody:  \"rgba(162, 196, 197,1)\",\n\n    backgroundBtn: {\n        hoverBtn: '#e0e5ebf3',\n        activeBtn: '#e0e5ebdd',\n    },\n\n    shadowBtn: {\n        shInset1: 'rgba(0,0,0,0.3)',\n        shInset2: 'rgba(255,255,255,0.5)',\n\n        shHover1: 'rgba(193,193,193,0.1)',\n        shHover2: 'rgba(0,0,0,0.2)',\n        shActive1: 'rgba(193,193,193,0.15)',\n        shActive2: 'rgba(0,0,0,0.3)',\n    }\n};\n\n","import styled from 'styled-components';\nimport { Button } from '../../styles/placeholders.styled';\n\n\nexport const DataInput = styled.form`\n  \n    display: flex;\n    flex-direction: column;\n    padding: 4px 20px;\n    text-shadow: 1px 1px 2px black, 0 0 1em black, 0 0 0.2em black;\n    @media (min-width:480px){\n        padding: 4px;\n  };\n  \n`;\n\nexport const ButtonForm = styled(Button)`\nmargin-top: 8px;\nwidth: 8em;\nmargin-left: auto;\nmargin-right: auto;\nfont-size: 0.8em;\n`;\n","import { memo, useContext} from 'react';\n\nimport { nanoid } from 'nanoid';\nimport PropTypes from 'prop-types';\nimport langContext from 'langContext';\n\nimport locale from '../../shared/materials/langauges.json';\nimport { DataInput, ButtonForm } from './DataInputForm.styled';\n\n\nconst DataInputForm = ({addContact})=>{\n\n        const idInputName = nanoid();\n        const idInputNumber = nanoid();\n\n        const handleSubmit = e => {\n            e.preventDefault();\n            const name = e.currentTarget.name.value;\n            const number = e.currentTarget.number.value;\n            addContact(name, number);\n            e.currentTarget.reset();\n        };\n\n        const lang = useContext(langContext);\n        const content= locale[lang].phonebook;\n\n        return (\n            \n            <DataInput onSubmit={handleSubmit}>\n                <label htmlFor={idInputName}>{content.name}</label>\n                <input\n                    name=\"name\"\n                    type=\"text\"\n                    id={idInputName}\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                    title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                    required\n                />\n                \n                <label htmlFor={idInputNumber}>{content.number}</label>\n                <input\n                    name=\"number\"\n                    type=\"tel\"\n                    id={idInputNumber}\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                    title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                    required\n                    />\n                <ButtonForm \n                    type='submit' \n                    name=\"contacts\" \n                    >{content.buttonText}\n                </ButtonForm>\n            </DataInput>\n            \n        );\n};\n\nexport default memo(DataInputForm);\n\nDataInputForm.propTypes={\n    addContact: PropTypes.func.isRequired,\n}\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n@media screen and (min-width:480px){\n    width: 85%;\n    max-width: ${props => {if (props.element === \"form\") return \"20vw\"}};\n    min-width: ${props => {if (props.element === \"form\") return \"160px\"}};\n    padding: 12px 8px 4px 8px;\n    }\npadding: 2px;\nwidth: 100%;\n\n    &:first-child{\n        box-shadow: inset 0 -2px 1px rgba(193,193,193,0.1), inset -2px -4px 4px rgba(0,0,0,0.2), 0 2px 1px rgba(193,193,193,0.1), 2px 4px 4px rgba(0,0,0,0.2);\n        background-color: rgba(0,0,0,0.1);\n        border-radius: 4px;\n        \n    };\n\n    &:last-child{\n        display: flex;\n        flex-direction: column;\n        align-items: stretch;\n        background-color: rgba(0,0,0,0.1);\n        border-radius: 4px;\n\n    };\n`;\n\nexport const Title = styled.h2`\n    text-align: center;\n    margin:  4px 0;\n    @media screen and (min-width:480px){\n        margin:  28px 0;\n    }\n`;","import { Title, Wrapper } from './Section.styled';\nimport PropTypes from 'prop-types';\n\n\nexport default function Section({element, children}){\n    return(\n        <Wrapper element={element}>\n            <Title>{children[0]}</Title>\n            {children[1]}\n            {children[2]}\n        </Wrapper>\n    )\n}\n\nSection.propTypes = {\n    children: PropTypes.arrayOf(PropTypes.node).isRequired,\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\nmargin:12px 0;\npadding:4px 0;\noverflow-y: auto;\n`","import styled from 'styled-components';\nimport { Button } from '../../styles/placeholders.styled'\n\nexport const Card = styled.li`\n    display: grid;\n    grid-template-columns: 1.4fr 1fr 0.4fr;\n    padding: 4px 4px 4px 8px;\n    align-items: center;\n    height: 24px;\n    margin: 2px;\n    border-bottom:  rgba(0,0,0,0.1) 1px solid;\n    background-color: rgba(0, 0, 0, 0.5);\n    color: #e9f1f2;\n    text-shadow: 0 0 0.8em black;\n    font-size: 0.8em;\n    @media screen and (min-width:640px){\n        padding: 8px;\n        font-size: 1em;\n    }\n`;\n\nexport const Name = styled.p`\nmargin-right: 8px;\n`;\n\nexport const Phone = styled.p`\nmargin-right: 8px;\n`;\n\nexport const ButtonCard = styled(Button)`\npadding: 4px 6px 4px 4px; \nfont-size: 0.8em;\nmax-width: 5.6em;\n`;","import { memo, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Name, Phone, ButtonCard } from \"./ConactCard .styled\";\nimport langContext from 'langContext';\nimport locale from '../../shared/materials/langauges.json';\n\n\nfunction ConactCard({name, id, number, removeCard}){\n\n    const lang = useContext(langContext);\n    const content = locale[lang].contacts;\n\n    return (<Card name={name} id={id}>\n        <Name>{name}</Name>\n        <Phone>{number}</Phone>\n        <ButtonCard type='button' onClick={removeCard} name={id}>{content.buttonText}</ButtonCard>\n    </Card>)\n}\n\nexport default memo(ConactCard);\n\nConactCard.propTypes={\n    name: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    removeCard: PropTypes.func.isRequired,\n}","import {useMemo} from 'react';\nimport { useSelector } from 'react-redux';\nimport {List} from './Contacts.styled';\nimport ConactCard from \"components/ConactCard/ConactCard\";\nimport PropTypes from 'prop-types';\n\n\nexport default function Contacts({removeConactApp}){\n    \n    const {contacts, filter } = useSelector(store => store);\n    // const contacts = useSelector(store => store);\n    const { items } = contacts;\n    // console.log('store', contacts);\n    // console.log('filter', filter);\n    const normalizeTodos = filter.toLowerCase();\n\n    const visibleContacts = items.filter(contact => contact.name.toLowerCase().includes(normalizeTodos));\n\n    const getCardMarking = useMemo(() => {\n       \n        return (visibleContacts.map( (user) =>\n                <ConactCard \n            key={user.name + user.id}\n            id={user.id}\n            name = {user.name}\n            number = {user.phone}\n            removeCard={(e) => removeConactApp(e.currentTarget.name, visibleContacts.length)}/>\n            )\n        );\n    },[removeConactApp, visibleContacts]);\n    \n    return (\n        <List>\n            {getCardMarking}\n        </List>\n    )\n};\n\nContacts.propTypes={\n    removeConactApp: PropTypes.func.isRequired,\n    contacts: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string).isRequired,\n    )\n}","import styled from \"styled-components\";\n\nexport const FilterSection = styled.div`\n    box-shadow: inset 0 -2px 2px rgba(193,193,193,0.1), inset -2px -4px 8px rgba(0,0,0,0.2), 0 2px 2px rgba(193,193,193,0.1), 2px 4px 8px rgba(0,0,0,0.2);\n    background-color: rgba(0,0,0,0.4);\n    background-color: rgba(0, 0, 0, 0.4);\n    text-shadow: 0 0 0.8em black;\n    color: #e9f1f2;\n    border-radius: 2px;\n    padding: 4px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`;\n\nexport const Input = styled.input`\nwidth: 160px;\n`;","import { useContext } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { nanoid } from 'nanoid';\nimport { FilterSection, Input } from \"./Filter.styled\";\nimport langContext from 'langContext';\n\nimport locale from '../../shared/materials/langauges.json';\nimport { setFilter } from 'redux/filter/filter-slice'; \n\nexport default function Filter(){\n\n    const dispatch = useDispatch()\n    const idInputFilter = nanoid();\n    const {filter} = useSelector(store => store);\n\n    const lang= useContext(langContext);\n    const content=locale[lang].contacts;\n\n    return <FilterSection>\n        <label htmlFor={idInputFilter}>{content.filtrText}</label>\n            <Input \n                id={idInputFilter}\n                type=\"text\"\n                onChange={e => dispatch(setFilter(e.currentTarget.value.trim())) }\n                value={filter}\n                placeholder={content.filtrPlaceholder}>\n            </Input>\n        </FilterSection>\n};","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\njustify-content: flex-end;\nposition: sticky;\ntext-align: end;\npadding: 4px;\nfont-weight: 500;\ndisplay: flex;\nheight: 36px;\nalign-items: center;\ncolor: grey;\ntext-shadow: 0px 0px 1px black, 0 0 0.4em black;\n\n@media screen and (min-width:480px){\n    position: absolute;\n    right: 8px;\n    top: 0;\n    margin-top: 4px;\n}\n\n`;\nexport const WrapperLoader = styled.div`\nmargin:8px 4px;\npadding:2px;\nheight: 30px;\nwidth: 30px;\ndisplay: flex;\njustify-content: center;\n`;","import styled from \"styled-components\";\n\nexport const LangaugeStyled = styled.div`\n  width: 72px;\n  margin:8px 4px;\n  padding:0;\n  border: 1px solid grey;\n  border-radius: 15px;\n  background-color: rgba(255,255,255,0.8);\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0, 0, 0.1, 1);\n\n  &:hover{\n        background-color: rgba(255,255,255,1);\n    };\n`;\n\nexport const Btn = styled.button`\nwidth: 32px;\nheight:26px;\npadding: 2px;\nbackground-color:  rgba(0,0,0,0);\ncursor: pointer;\nborder:none;\n\ncolor: #000;\nfont-weight: 400;\nfont-size: 14px;\ntransition-property: font;\ntransition-duration: 250ms;\ntransition-timing-function: cubic-bezier(0, 0, 0.1, 0.9);\n\n&:first-child{\n    border-radius: 14px 0 0 14px;\n};\n\n&:last-child{\n    border-radius: 0 14px 14px 0;\n};\n\n    &:hover{\n        font-weight: 600;\n        background-color: rgba(255,255,255,1);\n    };\n`;","import{useState, useEffect} from 'react';\nimport { LangaugeStyled, Btn } from \"./Langauge.styled\";\n\nexport default function Langauge({langauge, changeLangauge}){\n    const [choice, setChoise] = useState(()=>langauge ?? \"Ua\");\n    \n    useEffect(()=>{\n        localStorage.setItem('langauge', JSON.stringify(choice));\n        changeLangauge(choice);\n    },[choice, changeLangauge]);\n    \n    const activeStyle=(Langauge)=>{\n        const active = {\n            fontWeight: 600,\n            cursor: 'auto',\n            };\n        if(Langauge === choice) return active;\n    }\n\n    return (\n        <LangaugeStyled>\n            <Btn type=\"button\" disabled={choice === \"Ua\"} style={activeStyle(\"Ua\")} name=\"Ua\" onClick={(e)=>setChoise(e.target.name)}>Укр</Btn>|\n            <Btn type=\"button\" disabled={choice === \"En\"} style={activeStyle(\"En\")} name=\"En\" onClick={(e)=>setChoise(e.target.name)}>En</Btn>\n        </LangaugeStyled>\n    )\n}","import styled from 'styled-components';\n\nexport const Overlay = styled.div`\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: rgba(0, 0, 0, 0.8);\n    z-index: 1200;\n`;\n\nexport const ModalContetn = styled.div`\n\n    padding: 8px;\n    border-radius: 3px;\n    box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px, 1px, 3px, 0px rgba(0, 0, 0, 0.12);\n    max-width: calc(100vw - 48px);\n    max-height: calc(100vh - 48px);\n    \n    background-color: #fff;\n    @media (min-width:480px){\n        padding: 12px;\n  }\n    \n`;                                                                                                                                                                                  \n","import { useEffect } from \"react\";\nimport { createPortal } from 'react-dom';\nimport { Overlay, ModalContetn } from './Modal.styled';\nimport PropTypes from 'prop-types';\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal=(props)=>{\n    //Цей метод запускається, коли модальне вікно монтується\n    useEffect(()=>{\n        window.addEventListener('keydown', closeModalEsc);\n        document.documentElement.style.overflow='hidden';\n\n        return ()=>{\n            //Коли модалка розмонтовується\n            window.removeEventListener('keydown', closeModalEsc);\n            document.documentElement.style.overflow=null;\n        }\n    });\n\n    const closeModalEsc = (e) => {\n        if(e.code === 'Escape'){\n            props.onClose();\n        }\n    }\n\n    const closeModalBackdrop = (e) =>{\n        if(e.target === e.currentTarget){ props.onClose()}\n    }\n\n    const {children} = props;\n    return createPortal(<Overlay onClick={closeModalBackdrop}>\n        <ModalContetn >\n            {children}\n        </ModalContetn>\n    </Overlay>, modalRoot);\n};\n\nexport default Modal;\n\nModal.propTypes = {\n    onClose: PropTypes.func.isRequired,\n    children: PropTypes.element,\n};\n  ","import styled from \"styled-components\";\n\nexport const Gallery = styled.ul`\n    display: grid;\n    max-width: 72vw ;\n    grid-template-columns: repeat(4, minmax(280px, 1fr));\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 4px;\n    margin-left: auto;\n    margin-right: auto;\n    @media (min-width:480px){\n      display: grid;\n      grid-template-columns: repeat(5, minmax(280px, 1fr));\n      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\n      grid-gap: 16px;\n  }\n`;\n\nexport const Item = styled.li`\n    height: calc(68vh / 4);\n    border-radius: 2px;\n    box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const Img = styled.img`\n    width: 100%;\n    height: 100%;\n  object-fit: cover;\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover{\n    transform: scale(1.03);\n    cursor: pointer;\n  }\n  \n`;","import { Gallery, Item, Img } from \"./ImageGallery.styled\";\nimport PropTypes from 'prop-types';\n\nexport default function ImageGallery({reply, changeImage}){\n    const HandkeClickCard=(e)=>{\n        const image = e.currentTarget.children[0];\n        changeImage(image.dataset.source);\n    }\n\n    const galleryList=()=>{\n        return reply.map(({id, webformatURL, largeImageURL, tags})=>{\n            return (\n                <Item key ={id} onClick={HandkeClickCard}>\n                    <Img src={webformatURL} alt={tags} data-source={largeImageURL}/>\n                </Item>)}\n            )\n    }\n\n    return (\n        <Gallery>\n            {galleryList()}\n        </Gallery>\n    )\n};\n\nImageGallery.propTypes = {\n    reply: PropTypes.arrayOf(PropTypes.object).isRequired,\n    changeImage: PropTypes.func.isRequired,\n};","import styled from 'styled-components';\n\nexport const BackgroundBtn = styled.button`\n    margin:8px 4px;\n    padding:0;\n    background-color:  rgba(255,255,255,0.8);\n    cursor: pointer;\n    height:30px;\n    width: 30px;\n    transition-property: background-color;\n    transition-duration: 250ms;\n    transition-timing-function: cubic-bezier(0, 0, 0.1, 1);\n    border-radius:20%;\n     &:hover{\n        background-color:  rgba(255,255,255,0.9);\n    } \n`\n\nexport const iconStyle = {\n    backgroundColor: \"rgba(0,0,0,0)\",\n    height: \"100%\",\n    width: \"auto\",\n    fill: \"#313c3d\",\n}","import { useState} from 'react';\nimport {imageApi} from '../../shared/api/imageApi';\nimport Modal from 'components/Modal';\nimport ImageGallery from '../ImageGallery/ImageGallery';\n\nimport { RiImage2Fill } from \"react-icons/ri\";\n\nimport { BackgroundBtn, iconStyle} from \"./Background.styled\";\n\n\nexport default function Background({changeBackground}){\n    const [showeModal, setShoweModal] = useState(false);\n    const [backgroundImg, setBackgroundImg] = useState(null);\n\n    const onModal=async()=>{\n        \n        const data = await imageApi();\n        console.log(data);\n        \n        setBackgroundImg(data.hits);\n        setShoweModal(true);\n    };\n\n    const changeImage=(newImage)=>{\n        changeBackground(newImage);\n        setShoweModal(false);\n    }\n\n    return  <>\n            <BackgroundBtn type=\"button\" disabled={showeModal} onClick={onModal}>\n                <RiImage2Fill style={iconStyle}/>\n            </BackgroundBtn>\n           {showeModal && <Modal onClose={()=>setShoweModal(false)}>\n                <ImageGallery reply={backgroundImg} changeImage={changeImage}/>\n            </Modal>}\n            </>\n};\n","// import axios from \"axios\";\n\n// const instance = axios.create({\n//     baseURL: \"https://pixabay.com/api/?key=28160645-02600786ca706ffa5b60b520e&q=backgrounds&image_type=photo\",\n// });\n\n// export const imageApi = async () => {\n//     const {data} = await instance.get(\"/\");\n//     return data;\n// };\n\nexport function imageApi(){\n    const URL = \"https://pixabay.com/api/?key=28160645-02600786ca706ffa5b60b520e&q=backgrounds&image_type=photo\";\n    return fetch(URL)\n        .then(res=>{\n            if(!res.ok){ throw new Error (res.status)};\n            return res.json();\n        }).catch(error=> {\n            error.message=\"Щось пішло не так\";\n            alert(error.message)});\n}","import styled from 'styled-components';\n\nexport const Spinner = styled.div`\n  max-height: 72vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Oval = styled.span`\n\n  width: ${props => props.height}${\"px\"};\n  height: ${props => props.height}${\"px\"};\n  border: ${props => {return (+props.height/8)}}${\"px\"} solid ${props=> props.secondaryColor};\n  border-radius: 50%;\n  display: inline-block;\n  position: relative;\n  box-sizing: border-box;\n  animation: rotation 1s linear infinite;\n\n  &::after {\n    content: '';  \n    box-sizing: border-box;\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    transform: translate(-50%, -50%);\n    width: ${props => props.height}${\"px\"};\n    height: ${props => props.height}${\"px\"};\n    border-radius: 50%;\n    border: ${props => {return (props.height/8)}}${\"px\"} solid;\n    border-color: ${props=> props.color} transparent;\n  };\n\n  @keyframes rotation {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n  }\n}\n`;\n","import { Spinner, Oval } from './Loader.styled';\nimport PropTypes from 'prop-types';\n\nexport default function  Loader({height=40}){\n    return(\n        <Spinner>\n            <Oval\n            height = {height}\n            secondaryColor = \"#f1f1f1\"\n            color = '#393c468e'\n            />\n        </Spinner>\n    )\n};\n\nLoader.propTypes={\n    height: PropTypes.number,\n};\n","import { useSelector } from 'react-redux';\nimport { Wrapper, WrapperLoader } from './Settings.styled';\nimport Langauge from '../Langauge/Langauge';\nimport Background from '../Background/Background';\nimport Loader from 'components/Loader';\n\nexport default function Settings({langauge, changeLangauge, changeBackground}){\n    const  {loading} = useSelector(store => store.contacts);\n    const lang = {langauge, changeLangauge};\n    const bg = {changeBackground}\n    \n    return(\n        <Wrapper>\n            <Langauge {...lang}/>\n            <Background {...bg}/>\n            <WrapperLoader> {loading && <Loader height={20}/>} </WrapperLoader>\n            \n        </Wrapper>\n    )\n}","import React, { useState, useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Background, Container, Message } from \"./Phonebook.styled\";\n\nimport DataInputForm from '../DataInputForm/DataInputForm';\nimport Section from '../Section/Section';\nimport Contacts from '../Contacts/Contacts';\nimport Filter from 'components/Filter/Filter';\nimport Settings from 'components/Settings';\nimport langContext from 'langContext';\nimport locale from '../../shared/materials/langauges.json';\nimport backgroundImg from '../../images/background.jpg';\n\n// import { addItem, removeItems } from 'redux/items/items-actions';\nimport { fetchItems, addItem, removeItem } from 'redux/items/items-operations';\nimport { setFilter } from 'redux/filter/filter-slice'; \n\n\nconst  Phonebook = () => {\n\n  const {contacts} = useSelector(store => store);\n  const  {items, loading} = contacts;\n  // console.log(\"items\", items);\n  // console.log(\"loading\", loading);\n\n  //Відмальовування активної мови відбувається в Langaguge, а цей стейт потрібен для контексту\n  const [langauge, setLangauge] = useState(()=>localContacts('langauge'));\n  const [background, setBackground] = useState(()=>localContacts('background'));\n\n  const content = locale[langauge];\n\n  const dispatch = useDispatch();\n  function localContacts(key){\n    const data = localStorage.getItem(key);\n    if(!data){\n      if(key === 'langauge')return'Ua';\n      if(key === 'background')return backgroundImg;\n    }\n    const parseContacts = JSON.parse(data);\n    if (parseContacts)return parseContacts;\n  };\n  \n  useEffect(()=>{\n    dispatch(fetchItems());\n  },[dispatch]);\n\n  useEffect(()=>{\n    localStorage.setItem('background', JSON.stringify(background));\n  },[background]);\n\n\n  const addContact = useCallback((name, phone)=>{\n    // if (items.find(item => item.name === name)) return alert(name + \" \" + content.notific);\n    dispatch( addItem({name, phone}) );\n   \n  // },[items, content.notific, dispatch]);\n  },[dispatch]);\n \n  const removeConactApp = useCallback( async(id, length) => {\n    await dispatch(removeItem(id));\n    if (length === 1) dispatch(setFilter(\"\"));\n  },[dispatch]);\n\n    return (\n      <langContext. Provider value={langauge}>\n      <Background bg={background}>\n      <Container bg={background}>\n          <Settings \n        langauge={langauge} \n        changeLangauge = {useCallback( lang => setLangauge(lang),[setLangauge] )}\n        changeBackground = {newbackground => setBackground(newbackground)}\n      />\n          <Section element=\"form\">{content.phonebook.header}\n            {<DataInputForm \n              addContact={addContact}\n            />}\n          </Section>\n\n          {items.length > 0 \n          && <Section element=\"contacts\">{content.contacts.header}\n              <Filter />\n              <Contacts \n                removeConactApp={removeConactApp}\n              />\n            </Section>}\n\n          {(items.length === 0 && !loading) && <Message>{content.message}</Message>}\n      </Container>\n      </Background>\n      </langContext. Provider>\n    );\n};\n\nexport default Phonebook;\n","import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    \n`;","import Phonebook from \"components/Phonebook/Phonebook\";\nimport { Wrapper } from './ContactsPage.styled';\n\nconst ContactsPage = () => {\n\n    return (\n        <Wrapper>\n            {<Phonebook />}\n        </Wrapper>\n    )\n}\n\nexport default ContactsPage;"],"names":["Background","styled","props","bg","Container","Message","createContext","hoverBtn","activeBtn","shInset1","shInset2","shHover1","shHover2","shActive1","shActive2","Button","DataInput","ButtonForm","DataInputForm","addContact","idInputName","nanoid","idInputNumber","lang","useContext","langContext","content","locale","phonebook","onSubmit","e","preventDefault","name","currentTarget","value","number","reset","htmlFor","type","id","pattern","title","required","buttonText","memo","Wrapper","element","Title","Section","children","List","Card","Name","Phone","ButtonCard","ConactCard","removeCard","contacts","onClick","Contacts","removeConactApp","useSelector","store","filter","items","normalizeTodos","toLowerCase","visibleContacts","contact","includes","getCardMarking","useMemo","map","user","phone","length","FilterSection","Input","Filter","dispatch","useDispatch","idInputFilter","filtrText","onChange","setFilter","trim","placeholder","filtrPlaceholder","WrapperLoader","LangaugeStyled","Btn","Langauge","langauge","changeLangauge","useState","choice","setChoise","useEffect","localStorage","setItem","JSON","stringify","activeStyle","fontWeight","cursor","disabled","style","target","Overlay","ModalContetn","modalRoot","document","querySelector","window","addEventListener","closeModalEsc","documentElement","overflow","removeEventListener","code","onClose","createPortal","Gallery","Item","Img","ImageGallery","reply","changeImage","HandkeClickCard","image","dataset","source","webformatURL","largeImageURL","tags","src","alt","BackgroundBtn","iconStyle","backgroundColor","height","width","fill","changeBackground","showeModal","setShoweModal","backgroundImg","setBackgroundImg","onModal","fetch","then","res","ok","Error","status","json","catch","error","message","alert","data","console","log","hits","newImage","Spinner","Oval","secondaryColor","color","Loader","Settings","loading","localContacts","setLangauge","background","setBackground","key","getItem","parseContacts","parse","fetchItems","useCallback","addItem","removeItem","newbackground","header"],"sourceRoot":""}